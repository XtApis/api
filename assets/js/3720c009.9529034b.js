"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[84787],{43672:(t,e,s)=>{s.r(e),s.d(e,{default:()=>h});s(96540);var a=s(11750),n=s(10646),r=s(16961),l=s(73982),i=s(87616),c=s(15845),g=s(92694),o=s(74848);function d({title:t}){return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.be,{title:t}),(0,o.jsx)(c.A,{tag:"doc_tags_list"})]})}function u({tags:t,title:e}){return(0,o.jsx)(n.e3,{className:(0,a.A)(r.G.page.docsTagsListPage),children:(0,o.jsx)("div",{className:"container margin-vert--lg",children:(0,o.jsx)("div",{className:"row",children:(0,o.jsxs)("main",{className:"col col--8 col--offset-2",children:[(0,o.jsx)(g.A,{as:"h1",children:e}),(0,o.jsx)(i.A,{tags:t})]})})})})}function h(t){const e=(0,l.b)();return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(d,{...t,title:e}),(0,o.jsx)(u,{...t,title:e})]})}},45964:(t,e,s)=>{s.d(e,{A:()=>i});s(96540);var a=s(11750),n=s(20672),r=s(50090),l=s(74848);function i({permalink:t,label:e,count:s,description:i}){return(0,l.jsxs)(n.A,{rel:"tag",href:t,title:i,className:(0,a.A)(r.A.tag,s?r.A.tagWithCount:r.A.tagRegular),children:[e,s&&(0,l.jsx)("span",{children:s})]})}},87616:(t,e,s)=>{s.d(e,{A:()=>g});s(96540);var a=s(73982),n=s(45964),r=s(92694),l=s(1150),i=s(74848);function c({letterEntry:t}){return(0,i.jsxs)("article",{children:[(0,i.jsx)(r.A,{as:"h2",id:t.letter,children:t.letter}),(0,i.jsx)("ul",{className:"padding--none",children:t.tags.map((t=>(0,i.jsx)("li",{className:l.A.tag,children:(0,i.jsx)(n.A,{...t})},t.permalink)))}),(0,i.jsx)("hr",{})]})}function g({tags:t}){const e=(0,a.Q)(t);return(0,i.jsx)("section",{className:"margin-vert--lg",children:e.map((t=>(0,i.jsx)(c,{letterEntry:t},t.letter)))})}},73982:(t,e,s)=>{s.d(e,{Q:()=>r,b:()=>n});var a=s(19380);const n=()=>(0,a.T)({id:"theme.tags.tagsPageTitle",message:"Tags",description:"The title of the tag list page"});function r(t){const e={};return Object.values(t).forEach((t=>{const s=function(t){return t[0].toUpperCase()}(t.label);e[s]??=[],e[s].push(t)})),Object.entries(e).sort((([t],[e])=>t.localeCompare(e))).map((([t,e])=>({letter:t,tags:e.sort(((t,e)=>t.label.localeCompare(e.label)))})))}},50090:(t,e,s)=>{s.d(e,{A:()=>a});const a={tag:"tag_Nd8t",tagRegular:"tagRegular_TiLs",tagWithCount:"tagWithCount_AQg7"}},1150:(t,e,s)=>{s.d(e,{A:()=>a});const a={tag:"tag_SyQ5"}}}]);